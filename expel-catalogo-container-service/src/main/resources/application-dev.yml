---
server:
  http2:
    enabled: true
  compression:
    enabled: true
  port: 8084
  servlet:
    context-path: /api/catalogo
web:
  cors:
    allowed-origins: "*"
    max-age: 3600

spring:
  main:
    lazy-initialization: true
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 24h
  output:
    ansi:
      enabled: always
  datasource:
    url: jdbc:postgresql://localhost:5434/plataformadb
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
    #url: ${SATJE_BADALEX_DEV_URL}
    #username: ${SATJE_BADALEX_DEV_USER}
    #password: ${SATJE_BADALEX_DEV_PASSWD}
    #driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    #database: SQL_SERVER
    database: POSTGRESQL
    open-in-view: false
    show-sql: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
      #dialect: org.hibernate.dialect.PostgreSQL95Dialect
    properties:
      hibernate:
        format_sql: true
        default_schema: "plataformadb"
        globally_quoted_identifiers: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  defer-datasource-initialization: false
  sql:
    init:
      platform: postgres
      mode: always
  hikari:
    minimumIdle: 1
    maximumPoolSize: 1
    idleTimeout: 30000
    maxLifetime: 1800000
    connectionTimeout: 30000
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
  cloud:
    config:
      enabled: false
  messages:
    basename: i18n/errors,i18n/problems
    use-code-as-default-message: true
    mvc:
      throw-exception-if-no-handler-found: true
problem:
  enabled: true
  cause-chains-enabled: true
  jackson-module-enabled: true
  dao-advice-enabled: true
  security-advice-enabled: true
  debug-enabled: true
  stacktrace-enabled: true
eureka:
  client:
    enabled: false
logging:
  level:
    root: INFO
    ec.gob.funcionjudicial: INFO
    org.springframework: INFO
    net.ttddyy.dsproxy.listener: DEBUG
    org.springframework.context.i18n: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.springframework.jdbc.core.JdbcTemplate: INFO
    org.springframework.jdbc.core.StatementCreatorUtils: INFO
    org.springframework.data.redis: INFO
redis:
  address: ${CJ_REDIS_IP_SERVER}
management:
  zipkin:
    tracing:
      endpoint: http://${CJ_ZIPKIN_IP_SERVER}:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,loggers
    metrics:
      enabled: true
    prometheus:
      enabled: true
    info:
      enabled: true
    loggers:
      enabled: true
openapi:
  service:
    title: EXPEL-CATALOGO-JURIDICO-SERVICE
    version: 1.0.0
    url: http://${CJ_EXPEL_IP_SERVER}:8060/${openapi.service.title}${server.servlet.context-path}
springdoc:
  default-consumes-media-type: "application/json"
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html